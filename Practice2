const express = require('express');
const app = express();
const PORT = 3000;

app.use(express.json());

let cards = [
    { id: 1, suit: 'Hearts', value: 'Ace' },
    { id: 2, suit: 'Spades', value: 'King' }
];
let nextId = 3;

app.get('/cards', (req, res) => {
    res.json(cards);
});

app.post('/cards', (req, res) => {
    const { suit, value } = req.body;
    if (!suit || !value) {
        return res.status(400).json({ error: 'Suit and value are required.' });
    }

    const newCard = {
        id: nextId++,
        suit,
        value
    };

    cards.push(newCard);
    res.status(201).json(newCard);
});

app.get('/cards/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const card = cards.find(c => c.id === id);

    if (!card) {
        return res.status(404).json({ error: 'Card not found.' });
    }

    res.json(card);
});

app.delete('/cards/:id', (req, res) => {
    const id = parseInt(req.params.id);
    const initialLength = cards.length;
    
    cards = cards.filter(c => c.id !== id);

    if (cards.length === initialLength) {
        return res.status(404).json({ error: 'Card not found.' });
    }

    res.status(204).send();
});

app.listen(PORT, () => {
    console.log(`Card Collection API running at http://localhost:${PORT}`);
    console.log('Available endpoints:');
    console.log('  GET    /cards');
    console.log('  POST   /cards (Body: { "suit": "...", "value": "..." })');
    console.log('  GET    /cards/:id');
    console.log('  DELETE /cards/:id');
});
